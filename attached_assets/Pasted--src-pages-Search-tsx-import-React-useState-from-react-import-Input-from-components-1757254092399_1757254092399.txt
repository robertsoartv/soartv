// src/pages/Search.tsx
import React, { useState } from 'react';
import { Input } from '@/components/ui/input';
import { Card, CardContent } from '@/components/ui/card';
import { db } from '@/lib/firebase';
import { collection, query, where, getDocs } from 'firebase/firestore';

export default function SearchPage() {
  const [queryText, setQueryText] = useState('');
  const [projects, setProjects] = useState<any[]>([]);
  const [users, setUsers] = useState<any[]>([]);
  const [loading, setLoading] = useState(false);

  const handleSearch = async () => {
    setLoading(true);
    try {
      const projectQuery = query(
        collection(db, 'projects'),
        where('title', '>=', queryText),
        where('title', '<=', queryText + '\uf8ff')
      );
      const projectSnap = await getDocs(projectQuery);
      const fetchedProjects = projectSnap.docs.map(doc => ({ id: doc.id, ...doc.data() }));

      const userQuery = query(
        collection(db, 'users'),
        where('displayName', '>=', queryText),
        where('displayName', '<=', queryText + '\uf8ff')
      );
      const userSnap = await getDocs(userQuery);
      const fetchedUsers = userSnap.docs.map(doc => ({ id: doc.id, ...doc.data() }));

      setProjects(fetchedProjects);
      setUsers(fetchedUsers);
    } catch (error) {
      console.error('Search error:', error);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="p-4 max-w-4xl mx-auto">
      <h1 className="text-3xl font-bold mb-4">üîç Search</h1>
      <div className="flex gap-2 mb-6">
        <Input
          placeholder="Search by title or creator name..."
          value={queryText}
          onChange={e => setQueryText(e.target.value)}
        />
        <button
          onClick={handleSearch}
          className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded"
        >
          Search
        </button>
      </div>

      {loading && <p>Loading results...</p>}

      {!loading && (
        <>
          <div className="mb-8">
            <h2 className="text-xl font-semibold mb-2">üé¨ Projects</h2>
            {projects.length > 0 ? (
              <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
                {projects.map(project => (
                  <Card key={project.id}>
                    <CardContent>
                      <h3 className="text-lg font-bold">{project.title}</h3>
                      <p className="text-sm text-gray-500">{project.genre}</p>
                    </CardContent>
                  </Card>
                ))}
              </div>
            ) : (
              <p>No matching projects found.</p>
            )}
          </div>

          <div>
            <h2 className="text-xl font-semibold mb-2">üë§ Users</h2>
            {users.length > 0 ? (
              <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
                {users.map(user => (
                  <Card key={user.id}>
                    <CardContent>
                      <h3 className="text-lg font-bold">{user.displayName}</h3>
                      <p className="text-sm text-gray-500">{user.bio || 'No bio available'}</p>
                    </CardContent>
                  </Card>
                ))}
              </div>
            ) : (
              <p>No matching users found.</p>
            )}
          </div>
        </>
      )}
    </div>
  );
}
