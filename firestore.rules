rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - users can read/write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null; // Allow reading other users' public profile data
    }
    
    // Projects collection - flexible access based on visibility and ownership
    match /projects/{projectId} {
      // Anyone can read public projects
      allow read: if resource.data.visibility == 'public' || resource.data.public == true;
      
      // Project owners can read their own projects (including private ones)
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.uploadedBy || 
         request.auth.uid == resource.data.owner || 
         request.auth.uid == resource.data.userId);
      
      // Only authenticated users can create projects
      allow create: if request.auth != null && request.auth.uid == request.resource.data.uploadedBy;
      
      // Project owners can update/delete their own projects
      allow update, delete: if request.auth != null && 
        (request.auth.uid == resource.data.uploadedBy || 
         request.auth.uid == resource.data.owner || 
         request.auth.uid == resource.data.userId);
    }
    
    // Posts collection - community feed posts
    match /posts/{postId} {
      // Anyone can read posts (they're public by design)
      allow read: if true;
      
      // Only authenticated users can create posts
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      
      // Post authors can update/delete their own posts
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Comments subcollection - nested under projects
    match /projects/{projectId}/comments/{commentId} {
      // Anyone can read comments on public projects
      allow read: if get(/databases/$(database)/documents/projects/$(projectId)).data.visibility == 'public' ||
                     get(/databases/$(database)/documents/projects/$(projectId)).data.public == true;
      
      // Project owners can read all comments on their projects
      allow read: if request.auth != null && 
        (request.auth.uid == get(/databases/$(database)/documents/projects/$(projectId)).data.uploadedBy ||
         request.auth.uid == get(/databases/$(database)/documents/projects/$(projectId)).data.owner ||
         request.auth.uid == get(/databases/$(database)/documents/projects/$(projectId)).data.userId);
      
      // Only authenticated users can create comments
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      
      // Comment authors can update/delete their own comments
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Likes subcollection - nested under projects  
    match /projects/{projectId}/likes/{likeId} {
      allow read, write: if request.auth != null;
    }
    
    // Saves/bookmarks subcollection - nested under users
    match /users/{userId}/saves/{saveId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}